/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import javax.swing.JOptionPane;
import linksqueezer.LinkSqueezer;
import linksqueezer.LinkStorage;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author blackrose
 */
public class MainFrame extends javax.swing.JFrame {

    private LinkSqueezer linkSqueezer;
    private LinkStorage linkStorage;

    /**
     * Creates new form MainFrame
     */
    public MainFrame(LinkSqueezer linkShortener, LinkStorage linkStorage) {
        this.linkSqueezer = linkSqueezer;
        this.linkStorage = linkStorage;
        initComponents();
        // call populateTableFromCSV()
        populateTableFromCSV();
    }

    private MainFrame() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblLongURL = new javax.swing.JLabel();
        txtLongURL = new javax.swing.JTextField();
        lblAlias = new javax.swing.JLabel();
        txtAlias = new javax.swing.JTextField();
        btnSqueeze = new javax.swing.JButton();
        txtSqueezedURL = new javax.swing.JTextField();
        lblSqueezedURL = new javax.swing.JLabel();
        btnCopyToClipBoard = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHistory = new javax.swing.JTable();
        lblHistory = new javax.swing.JLabel();
        btnClearRecord = new javax.swing.JButton();
        btnabout = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblLongURL.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblLongURL.setText("Long URL");

        txtLongURL.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        txtLongURL.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, java.awt.Color.lightGray, null, null));
        txtLongURL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLongURLActionPerformed(evt);
            }
        });

        lblAlias.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblAlias.setText("Alias/Name");

        txtAlias.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        txtAlias.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, java.awt.Color.lightGray, null, null));
        txtAlias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAliasActionPerformed(evt);
            }
        });

        btnSqueeze.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSqueeze.setForeground(new java.awt.Color(51, 204, 0));
        btnSqueeze.setText("Squeeze");
        btnSqueeze.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 51, 0), null, null));
        btnSqueeze.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSqueezeActionPerformed(evt);
            }
        });

        txtSqueezedURL.setEditable(false);
        txtSqueezedURL.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        txtSqueezedURL.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, java.awt.Color.lightGray, null, null));
        txtSqueezedURL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSqueezedURLActionPerformed(evt);
            }
        });

        lblSqueezedURL.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblSqueezedURL.setText("Squeezed URL");

        btnCopyToClipBoard.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCopyToClipBoard.setForeground(new java.awt.Color(51, 204, 0));
        btnCopyToClipBoard.setText("Copy To Clipboard");
        btnCopyToClipBoard.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 51, 0), null, null));
        btnCopyToClipBoard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopyToClipBoardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblLongURL)
                    .addComponent(lblSqueezedURL)
                    .addComponent(lblAlias))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtLongURL)
                    .addComponent(txtSqueezedURL)
                    .addComponent(txtAlias))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSqueeze, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCopyToClipBoard, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLongURL)
                            .addComponent(txtLongURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAlias)
                            .addComponent(txtAlias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(btnSqueeze, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSqueezedURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblSqueezedURL))
                    .addComponent(btnCopyToClipBoard))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        tblHistory.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tblHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S #", "Long URL", "Squeezed URL", "Alias"
            }
        ));
        tblHistory.setName(""); // NOI18N
        jScrollPane1.setViewportView(tblHistory);
        if (tblHistory.getColumnModel().getColumnCount() > 0) {
            tblHistory.getColumnModel().getColumn(0).setPreferredWidth(2);
        }

        lblHistory.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblHistory.setText("History");

        btnClearRecord.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnClearRecord.setForeground(new java.awt.Color(255, 0, 0));
        btnClearRecord.setText("Clear Record");
        btnClearRecord.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 51, 0), null, null));
        btnClearRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearRecordActionPerformed(evt);
            }
        });

        btnabout.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnabout.setText("About");
        btnabout.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 51, 0), null, null));
        btnabout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaboutActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 102));
        jLabel1.setText("Link Squeezer");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(382, 382, 382)
                        .addComponent(btnClearRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(btnabout, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(336, 336, 336))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 965, Short.MAX_VALUE))
                        .addGap(18, 18, 18))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblHistory)
                .addGap(460, 460, 460))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(btnabout)
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(44, 44, 44)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(lblHistory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnClearRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtLongURLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLongURLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLongURLActionPerformed

    private void txtAliasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAliasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAliasActionPerformed

    private void txtSqueezedURLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSqueezedURLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSqueezedURLActionPerformed

    private void btnSqueezeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSqueezeActionPerformed
        LinkSqueezer ls = new LinkSqueezer();
        String alias = txtAlias.getText();
        String longUrl = txtLongURL.getText();

        // Check if the alias is blank
        if (longUrl.isEmpty()) {
            JOptionPane.showMessageDialog(null, "URL cannot be blank", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Check if the generateShortUrl method returns false
        if (!(ls.isValidUrl(longUrl))) {
            JOptionPane.showMessageDialog(null, "Invalid URL", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Check if the alias is blank
        if (alias.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Alias cannot be blank", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String squeezedUrl = ls.generateShortUrl(longUrl);
        txtSqueezedURL.setText(squeezedUrl);

        // save to the CSV file
        String longURL = txtLongURL.getText();
        String squeezedURL = txtSqueezedURL.getText();
        String alias1 = txtAlias.getText();
        saveToCSV(longURL, squeezedURL, alias1);
        populateTableFromCSV();

    }//GEN-LAST:event_btnSqueezeActionPerformed

    private void btnCopyToClipBoardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopyToClipBoardActionPerformed
        // BTN
        String text = txtSqueezedURL.getText(); // Get the text from txtSqueezedURL

        if (text.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nothing to copy, please fill the field");
        } else {
            StringSelection selection = new StringSelection(text); // Create a StringSelection object with the text

            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard(); // Get the system clipboard
            clipboard.setContents(selection, null); // Set the contents of the clipboard to the StringSelection object

            JOptionPane.showMessageDialog(null, "Text Copied"); // Display the pop-up message
        }

    }//GEN-LAST:event_btnCopyToClipBoardActionPerformed

    private void btnClearRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearRecordActionPerformed
        // TODO add your handling code here:

        // Display a confirmation dialog
        int confirm = JOptionPane.showConfirmDialog(this, "Do you want to clear history?", "Confirm", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            // Clear the CSV file
            String csvFile = "DB.csv";
            try (PrintWriter pw = new PrintWriter(csvFile)) {
                pw.close();
                System.out.println("History cleared.");
            } catch (IOException e) {
                e.printStackTrace();
            }
            // Reload the table
            loadTableData();
        }
    }//GEN-LAST:event_btnClearRecordActionPerformed

    private void btnaboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaboutActionPerformed
        // TODO add your handling code here:
        new AboutFrame().setVisible(true);
    }//GEN-LAST:event_btnaboutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws UnsupportedLookAndFeelException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            // Set the look and feel to Windows Classic
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.motif.MotifLookAndFeel");

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            ex.printStackTrace();
        }

// Create and display the form
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    // Read and Display History
    // Read and Display History

    private void populateTableFromCSV() {
        String csvFile = "DB.csv";
        String line;
        String csvSplitBy = ",";
        DefaultTableModel model = (DefaultTableModel) tblHistory.getModel();

        // Clear existing table data
        model.setRowCount(0);

        try (BufferedReader br = new BufferedReader(new FileReader(csvFile))) {
            while ((line = br.readLine()) != null) {
                String[] data = line.split(csvSplitBy);
                model.addRow(data);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

// save to the CSV File
    private void saveToCSV(String longURL, String squeezedURL, String alias) {
        String csvFile = "DB.csv";

        try (PrintWriter pw = new PrintWriter(new BufferedWriter(new FileWriter(csvFile, true)))) {
            int nextSNum = getNextSNum(csvFile);
            String record = nextSNum + "," + longURL + "," + squeezedURL + "," + alias;
            pw.println(record);
            System.out.println("Record saved: " + record);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

// increment 
    private int getNextSNum(String csvFile) {
        int nextSNum = 1;

        try (BufferedReader br = new BufferedReader(new FileReader(csvFile))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] fields = line.split(",");
                if (fields.length > 0) {
                    int sNum = Integer.parseInt(fields[0]);
                    if (sNum >= nextSNum) {
                        nextSNum = sNum + 1;
                    }
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        return nextSNum;
    }

// reload Table
    private void loadTableData() {
        DefaultTableModel model = (DefaultTableModel) tblHistory.getModel();
        model.setRowCount(0); // Clear existing table data

        // Read the CSV file and populate the table
        String csvFile = "DB.csv";
        String line;
        String csvSplitBy = ",";
        try (BufferedReader br = new BufferedReader(new FileReader(csvFile))) {
            while ((line = br.readLine()) != null) {
                String[] data = line.split(csvSplitBy);
                model.addRow(data);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearRecord;
    private javax.swing.JButton btnCopyToClipBoard;
    private javax.swing.JButton btnSqueeze;
    private javax.swing.JButton btnabout;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAlias;
    private javax.swing.JLabel lblHistory;
    private javax.swing.JLabel lblLongURL;
    private javax.swing.JLabel lblSqueezedURL;
    private javax.swing.JTable tblHistory;
    private javax.swing.JTextField txtAlias;
    private javax.swing.JTextField txtLongURL;
    private javax.swing.JTextField txtSqueezedURL;
    // End of variables declaration//GEN-END:variables
}
